3.8, Vòng Lặp for Trong C#

1 Cấu trúc của một vòng lặp for trong C#

- Cú pháp:

for ([Khởi tạo]; [Điều kiện lặp]; [Bước lặp lại])
{
    // Khối lệnh được lặp lại. Có thể bỏ trống
}

+ Trong đó:

- Các phần [Khởi tạo]; [Điều kiện lặp]; [Bước lặp lại] hoàn toàn có thể để trống như ví dụ sau.
 
- Mỗi đoạn [Khởi tạo]; hay [Điều kiện lặp]; hay [Bước lặp lại] là một câu lệnh riêng.

+ Tiến trình:

- Ban đầu trình biên dịch sẽ di vào phần khởi tạo chạy đoạn lệnh khởi tạo.

- Tiếp theo kiểm tra điều kiện lặp. Rồi thực hiện khối code bên trong vòng lặp for. Khi đến ký hiệu } thì sẽ quay lên bước lặp lại.

- Sau đó lại kiểm tra điều kiện lặp rồi tiếp tục thực hiện đoạn code trong khối lệnh. Đến khi điều kiện lặp không còn thõa mãn thì sẽ kết thúc vòng lặp for.

+ Trường hợp khác:

for (; ;)   // lưu ý dấu ;
{
    // Khối lệnh được lặp lại. Có thể bỏ trống
}

+ Trong đó:

- Vòng lặp for này trở thành vòng lặp vô tận.

- Lưu ý dấu ; vẫn phải có.

2 Khởi tạo

- Khi bắt đầu vào đoạn code của vòng lặp for, đoạn lệnh này sẽ được chạy đầu tiên. Và chỉ được gọi duy nhất một lần trong vòng đời của vòng lặp for.

Ví dụ 1:

static void Main(string[] args)
{
    // i sẽ được khởi tạo lần đầu tiên tại vòng lặp for
    // khi vòng đời của vòng lặp for kết thúc bộ nhớ của biến i sẽ được giải phóng
    // hay nói cách khác i là biến cục bộ của vòng lặp for

    for (int i = 0; ; )
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}          

- Kết quả màn hình xuất ra một loạt giá trị 0 vì i = 0 được khởi tạo tại phần khởi tạo của vòng lặp for và vòng lặp for này không có điều kiện lặp nên chương trình sẽ chạy vô tận.

- Ở trường hợp này i được gọi là biến đếm (thuật ngữ lập trình dùng cho một biến có tác dụng tăng giá trị lên mỗi lần lặp lại).

Ví dụ 2:

- Chúng ta không nhất thiết phải khai báo môt biến ngay tại vị trí khởi tạo. Ta có thể chỉ gán giá trị hoặc không làm gì cả (bỏ trống).

static void Main(string[] args)
{
    int i;
    // i được gán giá trị bằng 0
    // i lúc này không phải biến cục bộ của vòng lặp for
    // i thuộc hàm main
    for (i = 0; ; )
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}

Kết quả tương tự như ví dụ trên

Ví dụ 3:

- Chỉ có thể có duy nhất một câu lệnh khởi tạo trong vòng lặp (lưu ý dấu , và dấu ; ở hai ví dụ sau)

static void Main(string[] args)
{
    int i;          
    // lỗi vì chỉ được phép có duy nhất một dòng lệnh khởi tạo trong vòng lặp for

    for (i = 0, int j = 0; ; )
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}

Hay

static void Main(string[] args)
{
    int i;          
    // lỗi vì chỉ được phép có duy nhất một dòng lệnh khởi tạo trong vòng lặp for
    for (i = 0; int j = 0; ; )
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}

3 Điều kiện lặp

- Điều kiện lặp là một biểu thức logic với kết quả trả về bắt buộc là true hoặc false (có thể bỏ trống sẽ trả về kết quả là true).

- Điều kiện lặp là dòng lệnh thứ 2 vòng for sẽ chạy vào khi chạy lần đầu tiên (Khởi tạo chạy trước). Từ lần lặp thứ 2 của vòng for, Điều kiện lặp cũng là dòng lệnh thứ 2 được chạy sau bước lặp lại. 

- Khi câu điều kiện lặp không còn thỏa mãn (kết quả là false) thì vòng lặp for sẽ kết thúc.

static void Main(string[] args)
{
    int i;          
    // vòng lặp for này vẫn lặp vô tận vì không bao giờ thỏa mãn điều kiên dừng
    // i luôn == 0
    // Điều kiện lặp luôn là true

    for (i = 0; i < 10;)
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}

- Ta có thể thấy điều kiện lặp của vòng lặp này luôn là true, nên vòng lặp sẽ lặp vô tận.

Để giải quyết vấn đề này và cho vòng lặp kết thúc khi thỏa mãn điều kiện lặp. Chúng ta thêm một đoạn code i++; ngay dưới đoạn code Console.WriteLine(i);

static void Main(string[] args)
{
    int i; 
    for (i = 0; i < 10;)
    {
        Console.WriteLine(i);
        i++;
    }
    Console.ReadKey();
}

- Kết quả màn hình xuất ra các giá trị số nguyên từ 0 đến 9 (10 lần). Chứng tỏ vòng lặp đã kết thúc sau 10 lần lặp (không còn lặp vô tận).

+ Lưu ý:

- Giá trị in ra từ 0 đến 9 chứ không phải đến 10. Vì Điều kiện lặp là i < 10 (10 == 10 nên câu điều kiện là false và kết thúc vòng lặp. Vẫn thỏa mãn lặp 10 lần).

- Sau mỗi lần lặp giá trị i lại tăng lên 1 đơn vị. Sau 11 lần thì giá trị i == 10, không còn thỏa mãn Điều kiện lặp nữa nên vòng lặp kết thúc.

- Hoàn toàn có thể để giá trị true hoặc false vào phần điều kiện lặp (bỏ trống mặc định là true). Hoặc một biểu thức logic phức tạp nhưng kết quả cuối cùng trả về là true hoặc false.

static void Main(string[] args)
{
    int i;        
    for (i = 0; (i % 3 == 0) && (i < 10);)
    {
        Console.WriteLine(i);
        i++;
    }
    Console.ReadKey();
}

Hay

static void Main(string[] args)
{
    int i;        
    for (i = 0; false;)
    {
        Console.WriteLine(i);
        i++;
    }
    Console.ReadKey();
}

Hoặc

static void Main(string[] args)
{
    int i;           
    for (i = 0; true;)
    {
        Console.WriteLine(i);
        i++;
    }
    Console.ReadKey();
}

4 Bước lặp lại

- Như ví dụ trên ta thấy. Mỗi lần muốn tăng giá trị của i ta phải dùng môt đoạn lệnh i++ ; ở cuối khối lệnh. Vậy trường hợp bất cứ khi nào lặp lại ta cũng cần thực thi đoạn lệnh i++ ; thì sao? Để tiện hơn cho việc code. Chúng ta có một phần tiếp theo để tìm hiểu. Đó là bước lặp lại.

Xét đoạn code sau:

static void Main(string[] args)
{
    int i;      
    for (i = 0; i < 10;)
    {
        Console.WriteLine(i);
        i++;
    }
    Console.ReadKey();
}

- Ta có thể viết gọn lại bằng cách đưa i++; vào phần bước lặp lại của khối for.

static void Main(string[] args)
{
    int i;      
    for (i = 0; i < 10; i++)
    {
        Console.WriteLine(i);   
    }
    Console.ReadKey();
}

Kết quả tương tự như bình thường

- Chúng ta có thể thực hiện nhiều đoạn lệnh trong bước lặp.

static void Main(string[] args)
{
    int i;
    int j = 0;

    for (i = 0; i < 10; i++, j += 3)
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}

- Ta thấy đoạn i++ và j += 3 được cách nhau bởi dấu phẩy (,)

- Với mỗi đoạn lệnh trong bước lặp. Chúng đươc phân cách nhau bởi dấu phẩy (,)


static void Main(string[] args)
{
    int i;
    int j = 0;

    for (i = 0; i < 10; i++, j += 3, Console.WriteLine("Tăng"))
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}

- Kết quả xuất dòng chữ "Tăng" mỗi khi lặp lại.

- Không thể thêm câu điều kiện : 

static void Main(string[] args)
{
    int i;
    int j = 0;
    // lỗi đoạn , if (i % 2 == 0) j += 3

    for (i = 0; i < 10; i++, if (i % 2 == 0) j += 3)
    {
        Console.WriteLine(i);
    }
    Console.ReadKey();
}













